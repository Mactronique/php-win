image: Visual Studio 2015
platform:
  - x64
version: 1.0.{build}

environment:
  matrix:
  - PHP_VERSION: latest
    PHP_DEP_VER: 7.0
  BUILD_PLATFORM: x64
  BITS: 64
  PHP_VC: 14
  PHP_SDK: c:\projects\php-sdk
  PHP_DEVPACK: c:\projects\php-devpack

build:
  verbosity: normal

install:
  - echo Setting PHP version...
  - dir "C:\Program Files (x86)\Windows Kits\10\bin\"
  - ps: >-
      If ($env:PHP_VERSION -Match "latest") {
        Start-FileDownload 'http://windows.php.net/downloads/releases/sha1sum.txt'
        $env:PHP_VERSION=type sha1sum.txt | where { $_ -match "php-(7\.0\.\d+)-src" } | foreach { $matches[1] }
        $env:version='{build}-$(PHP_VERSION)'
      } Else {
        $env:version='{build}-$(PHP_VERSION)'
      }
  - echo Initializing Build...
  - cd %APPVEYOR_BUILD_FOLDER%
  - cd ..
  - echo Downloading PHP-SDK
  - mkdir php-sdk && cd php-sdk
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/php-sdk/php-sdk-binary-tools-20110915.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php-sdk.zip')
  - '7z.exe x ..\php-sdk.zip | FIND /V "ing  "'
  - dir
  - bin\phpsdk_buildtree.bat phpdev
  - cd phpdev
  - mkdir vc14 && cd vc14
  - mkdir x64 && cd x64
  - mkdir obj
  - echo Downloading PHP source code [%PHP_VERSION%]
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/php-' + ${env:PHP_VERSION} + '-src.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php-sdk\phpdev\vc14\x64\php.zip')
  - 7z.exe x php.zip | FIND /V "ing  "
  - dir
  - echo Downloading PHP-DEPS
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/php-sdk/deps-' + ${env:PHP_DEP_VER} + '-vc' + ${env:PHP_VC} + '-' + ${env:BUILD_PLATFORM} + '.7z', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php-sdk\phpdev\vc14\x64\php-deps.zip')
  - '7z.exe x php-deps.zip | FIND /V "ing  "'
  - dir
  - mkdir pecl && cd pecl
  - git clone https://github.com/pdezwart/php-amqp.git php-amqp-master
  - git clone -q --branch=php7 https://github.com/phpredis/phpredis.git phpredis-php7
  - cd ..
  - echo Downloading PHP-Devel-Pack
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/php-devel-pack-' + ${env:PHP_VERSION} + '-Win32-VC' + ${env:PHP_VC} + '-' + ${env:BUILD_PLATFORM} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php-sdk\phpdev\vc14\x64\php-dev.zip')
  - 7z.exe x php-dev.zip | FIND /V "ing  "
  - mv php-%PHP_VERSION%-devel-VC%PHP_VC%-%BUILD_PLATFORM% php-devpack
  - cd deps\include
  - copy %APPVEYOR_BUILD_FOLDER%\include\*.h .
  - cd ..\lib
  - copy %APPVEYOR_BUILD_FOLDER%\lib\*.lib .
  - cd ..\..\php-%PHP_VERSION%-src
  - copy %APPVEYOR_BUILD_FOLDER%\bin\build.bat .
  - '"%VS140COMNTOOLS%\VsDevCmd" %BUILD_PLATFORM%'
  - echo Building PHP [%PHP_VERSION%]
  - '%PHP_SDK%\bin\phpsdk_setvars'
  - set
  - 'buildconf'
  - 'configure.bat --help | findstr amqp'
  - 'configure.bat --help | findstr redis'
  - 'configure.bat "--enable-snapshot-build" "--enable-debug-pack" "--disable-zts" "--with-amqp=shared" "--enable-object-out-dir=../obj/" "--enable-phar-native-ssl" "--with-sqlite3" "--with-pdo-sqlite" "--enable-odbc" "--with-pdo-odbc" "--enable-redis=shared" "--enable-com-dotnet=shared" "--with-mcrypt=static" "--without-analyzer"'

build_script:
  - 'nmake'
  - 'nmake build-dist'
  
on_failure :
  - 'dir'
